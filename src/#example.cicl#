(in-package :cicl-sys)

(defcmacro double (x)
  `(* ,x ,x))

(cicl
 (include "<stdio.h>")
 (include "<stdlib.h>")
 (include "example.h")

 (defstruct :int-list
   (val :int)
   (next struct :int-list *))
 (typedef (struct :int-list) :int-list)

 (defun print-hello ()
   (:void)
   (derp (printf "%s\\n" "Hello, world!"))
   (with-openn-file "hairyballs.txt" fp "r"
		    (fprintf fp "So many hairy balls.\\n"))
   (return))

 (defun print-int-list ((list :int-list *))
   (:void)
   (defvar (it (:int-list *)))
   (for ((= it list)
	 (!= (-> it next) NULL)
	 (= it (-> it next)))
	(printf "%d " (-> it val)))
   (printf "\n")
   (return))

 (defun main ((argc :int) (argv :char **))
   (:int)
   (defvar (l1 (:int-list *) (malloc (* (sizeof :int-list) 3)))
           (l2 (:int-list *) (+ l1 1))
           (l3 (:int-list *) (+ l1 2)))
   (= (-> l1 val) 3)
   (= (-> l1 next) l2)
   (= (-> l2 val) 5)
   (= (-> l2 next) l3)
   (= (-> l3 val) 9)
   (= (-> l3 next) NULL)
   (print-int-list l1)
   (print-hello)
   (return 0))

 (if (* i 3)
     (scope (= x (- 9 5)))
     (= x (- 9 9))
     (= y (double 12))))
